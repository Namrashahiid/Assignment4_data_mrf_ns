---
title: "Assignment4"
format: html
editor: visual
author: Marit Rygg Fredheim & Namra Shahid
---

# Assignment 4

## Mange modeller

```{r}
suppressPackageStartupMessages({
  library(tidyverse)
  library(modelr)
  options(na.action = na.exclude)
  library(lubridate)
  library(tseries)
  library(patchwork)
  library(broom)
  library(PxWebApiData)
  library(magrittr)
  library(dplyr)
  library(ggplot2)
  library(ggedit)
  
  library(broom)
  library(lmtest)
  library(sandwich)
  library(viridis)
  library(stringr)
})




```

I dette arbeidskravet skal vi undersøke hvilke faktorer som bestemmer prisen, per kvadratmeter for eneboliger i norske kommuner.
Dataene vi skal bruke skal vi hente fra SSB.
Vi starter med et ferdig datasett som vi utvider.
Vi laster ned datasettet pm2.Rdata fra Canvas.

### Leser inn data

```{r}
load(file = "data/pm2.Rdata")
```

**Variablene**\
Datafilen pm2 inneholder variablene (for 220 kommuner) årene 2008 til 2017.

**knr** Kommunenummer, fire siffer

**knavn** Kommunenavn

**aar** Årstall

**pm2** Gjennomsnittspris per m2 for eneboliger.
Gjennomsnitt for hver kommune.
Fra tabell 06035.

**ya_p** Andel av befolkningen i yrkesaktiv alder, definert som 20 til 64 år.
Fra tabell 07459.

**inc_h** Andelen av husholdninger i en kommune som har inntekt over 750000.
Fra tabell 07183.

**uni_p** Andel av befolkningen i en kommune som har universitets- eller høyskoleutdanning.
Fra tabell 09429.

**nytt_boarel_pp** Totalt antall kvadratmeter ferdigstilte eneboliger relativt til befolkning, dvs.
nye ferdigstilte m2 per person.
Fra tabell 05940.

**oms** Omsetning i varehandelen.
Fra tabell 04776.

```{r}
pm2 %>%
mutate(
  # aar <- as.factor(2008:2017) ok
  # men neste er bedre
  aar_d = ymd(paste(aar, "-01-01", sep = "")),
  aar = parse_factor(aar),
  .before = pm2
)
```

```{r}
knr <- pm2 %>%
  select(knr) %>%
  distinct(knr) %>%
  pull()
```

```{r}
# dette holder hvis du vil se knr. 
knr |>
  print(width = 78)
pm2 %>% 
  select(knr) %>%
  distinct(knr) %>%
  pull()
```

```{r}
typeof(knr)
```

```{r}
pm2
```

### Sysselsatte

Vi skal her hente data fra SSB, for å kunne generere en ny variabel.
Vi skal finne ut andel av befolkning i arbeidsfør alder som er sysselsatt.
Arbeidsfør alder blir her definert som 20-66 år.
Antall sysselsatte i hver kommune kan vi finne fra tabell 13122 hos SSB.

```{r}
metadata_13122 <- ApiData(
  "https://data.ssb.no/api/v0/no/table/13122/",
  returnMetaFrames = TRUE
)
```

```{r}
# Disse må vi angi for å hente data via API
names(metadata_13122)
```

```{r}
tid <- as.character(2008:2017)
```

```{r}
# Bruker ssb sin web-app og sjekker api-kall nederst på siden
# for å finne de argumentene som må settes. Ønsker sysselsatte
# utfra bosted for årene 2008:2017, for kommunene i knr, alle næringer,
# alle sektorer og ikke delt på kjønn
sysselsatte <- ApiData(
  urlToData = "13122",
  Region = knr,
  Alder = "20-66",
  NACE2007 = "00-99",
  Sektor = "ALLE",
  ContentsCode = "SysselEtterBoste",
  Tid = tid
    )

names(sysselsatte)[1] <- "desc"
names(sysselsatte)[2] <- "ss"
```

```{r}
# 
ss <- sysselsatte$ss %>% 
  # ...
  mutate(
    knavn = sysselsatte$desc$region,
  ) %>% 
  # Endrer variabelnavn
  rename(
    aar = Tid,
    knr = Region,
    sysselsatte_20_66 = value 
  )  %>%
  select(aar, knavn, knr, sysselsatte_20_66) %>% 
  as_tibble()
```

```{r}
ss %>%
head(n = 5) %>%
print()
```

```{r}
pm2 %<>%
  left_join(ss, by = c("aar", "knr"))
```

Henter så tilsvarende for befolkning i alderen 20-66 år fra tabell 07459 hos SSB.

```{r}
metadata_07459 <- ApiData(
  "https://data.ssb.no/api/v0/no/table/07459/",
  returnMetaFrames = TRUE
  )
```

```{r}
names(metadata_07459)
```

```{r}
# Kan prøve med Kjonn = FALSE og se om det gir total så
# slipper vi å addere menn og kvinner
metadata_07459$Kjonn
```

```{r}
# Slitsomt å hente alle år fra 20 til 66 og så aggregere selv
metadata_07459$Alder |>
  pull(values) |>
  print(width = 78)
```

```{r}
metadata_07459$ContentsCode
```

```{r}
#| echo: false
# siste
Alder = "20-66 år"
```

```{r}
tid <- as.character(2008:2017)
```

```{r}
befolkning <- ApiData(
  urlToData = "07459",
  Region = knr,
  Tid = tid,
  Alder = list("agg:Funksjonell2a", c("F309")),
  Kjonn = FALSE
    )

  names(befolkning)[1] <- "pop2066"
```

```{r}
bb <- befolkning$pop2066 %>% 
  # ...
  mutate(
    knavn = befolkning$pop2066$region,
    aar =  befolkning$dataset$Tid,
    knr = befolkning$dataset$Region
  ) %>% 
  # Endrer variabelnavn
  rename(
    befolkning_20_66 = value) %>%
  select(knavn, aar, knr, alder, befolkning_20_66)
```

```{r}
pm2 %<>%
  left_join(bb, by = c("aar", "knr"))
```

```{r}
pm2 %<>%
mutate(andel_ss = (sysselsatte_20_66/befolkning_20_66)*100)
```

```{r}
#pm2 %<>%
  #select(knr, aar, pm2, ya_p, inc_h, uni_p, nytt_bareal_pp, oms, tid, ss, alder, befolkning, knavn)
```

```{r}
#pm2 %>%
#summarise(ss, by = knr)
```

```{r}
pm2 %<>%
mutate(andel_ss = (sysselsatte_20_66/befolkning_20_66)*100)
```

```{r}
pm2 %>%
select(aar, knr, andel_ss) %>%
head(n = 5) %>%
print()
```

### Modell

```{r}
pm2 <- pm2 %>%
  mutate(
    #fnr = str_sub(knr, 1,2),
    aar_f = str_sub(aar)
  )
```

```{r}
pm2 %>%
  mutate(
    #fnr = parse_factor(fnr, levels = fnr),
    aar_f = parse_factor(aar_f, levels = aar_f)
  )
```

```{r}
mod1 <- paste("pm2 ~ aar_f", "ya_p",
"inc_h", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", sep = " + ")
print(strwrap(mod1), quote = FALSE)
```

```{r}
lm1 <- lm(mod1, data = pm2)
```

```{r}
  summary(lm1)
```

15\.

Det vi kan lese ut av verdien på års-koeffisientene er en estimate verdi, noe som forteller/representerer tall som vi bruker for å kalkulere data.
Dataene kan da vi bruke for å estimere en populasjonsparametre. 

Den første Estimate valuen for aar_f2009 er -585.169105, noe som forteller oss at den er negativ og tyder på at det er en nedgang i antall sysselsatte året 2009. 

Samme kan vi også si om aa_f2010.
Der er Estimate -695.231013.
Her blir konklusjonen det samme for aar_f2009. 

Neste the std.error verdien forteller oss hvor spredt verdiene i vårt datasett er spredt.
Std.error verdien for aar_f2009 er 275.589422, denne verdien er høy, noe som forteller oss i hvilken grad verdiene våre er spredt.
Vi kan konkludere her med å si at ifølge vår Std.error verdi for aar_f2009 er verdiene våre en del spredt. 

T-value, også kalt for the t critical value, forteller oss om resultatene våre er signifikante eller ikke.
Det som er vanlig å gjøre er å sammenligne t-value med et signifikansnivå.
Vi kan ta 5% (0.05) som i utgangspunkt for sammenligning.
Vår t-value for aar_f2009 er -2.123, noe som forteller oss at den er negativ.
Hvis vi bruker nå 0.05 for å sammenligne.
T-test tyder på at det er en to-sidet test.
5%/2= 2,5/100= 0.025.
Hvis nå vår value er mindre enn t-valuen, blir resultatet av testen vår statistisk signifikant.
Dette er tilfelle her, siden vår t-value er mindre enn 2,5% nivå. 

16\.

Fortegnet på estimate value på de forskjellige årene er negativ på de fleste.
Vi kan se at det er en sammenheng her, siden de fleste Estimate verdiene har negative tall.
Videre ser vi at ya_p har en positiv Estimate verdi på 767.961063, noe som tyder på at det er en positiv sammenheng også.
Estimate verdiene begynner med å være negative, deretter blir for eksempel ya_p, inc_h, uni_p positiv, deretter blir nytt_bareal_pp verdien plutselig negativ.

```{r}
pm2 <- pm2 %>%
  add_residuals(lm1)
```

```{r}
pm2 <- pm2 %>%
  mutate(aar_d = make_date(aar))
```

```{r}
pm2 <- pm2 %<>%
  mutate(
    fylke = substr(knr, start = 1, stop = 2),
    fnr = substr(knr, 1, 2)
    )
```

```{r}
pm2_red <- pm2 %>%
  filter(fylke %in% c("01", "02", "03", "11", "12"))
```

```{r}
#| label: fig-gjennomsnittlig_residual
#| fig-cap: Utviklingen i gjennomsnittlig residual fra modell 1 for utvalgte fylker
pm2_red %>%
  filter(fylke %in% c("01", "02", "03", "11", "12")) %>%
  unnest(c(fylke)) %>%
  group_by (fylke, aar_d) %>%
  summarise(mean_fylke = mean(resid)) %>%
  ggplot(aes(x=aar_d, y=mean_fylke, colour = fylke)) +
  geom_line(lwd=1) +
  theme(legend.position = "bottom")
```

20\.

Aller først er det slik at denne plotten i @fig-gjennomsnittlig_residual viser oss utviklingen i gjennomsnittlig residual fra modell 1 for utvalgte fylker.
På x-aksen ser vi årstallet og på y-aksen tall på residualene. 

Det vi kan si her ut fra modellens treffsikkerhet er at den treffer noe bra.
fnr forteller oss om fylkesnummer.
Fnr: 01, 02, 11, 12 ligger på samme nivå i plottet, noe som tyder på at de har samme verdier.
På andre siden skiller fnr: 03 seg, siden den ligger over alle fnr.
Vi kan her konkludere med å si at fnr: 03 har hatt en positiv residual utvikling. 

\
21.

Det vi kommer frem til er at vi kan fjerne variabelen inc_h som er andel husholdninger i en kommune som har inntekt over 750 000.

Vi ser ikke noe grunn for at andel husholdninger i en kommune som har inntekt over 750 000, skal ha noe stor innvirkning på prisen per kvadratmeter per eneboliger.
Vi ser heller ikke at oms (omsetning i varehandel), ya_p (andel av befolkning i yrkesatkiv alder) og uni_p (andel av befolkning i en kommune som har universitet eller høyskole utdanning), skal ha stor betydning for pris per kvadratmeter for eneboliger.
For å ikke få store forskjeller fra modell 1 til modell 2, velger vi å kun kutte en variabel altså inc_h.

```{r}
mod2 <- paste("pm2 ~ aar_f", "ya_p", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", sep = " + ")
```

```{r}
lm2 <- lm(mod2, data = pm2)
```

```{r}
summary(lm2)
```

### Dummy fylke og år

```{r}
mod3 <- mod2
```

```{r}
mod3 <- paste("pm2 ~ aar_f", "ya_p", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", "fylke", sep = " + ")
```

```{r}
lm3 <- lm(mod3, data = pm2)
```

```{r}
pm2 <- pm2 %>%
  mutate(res_m3 = resid(lm3))
```

```{r}
summary(lm3)
```

25\.

Koeffisientene for fylke Oslo (03) viser oss at det er postive verdier.
Dette tyder å at f.eks Estimate verdien som er 9.751 er positiv og at modellen for fylke Oslo er da brukbar.
Vi ser også at St.Error verdien for fylke Oslo er 8.361, noe som forteller oss hvor spredt datasettet vårt er.
Vi har en std.error verdi som ligger over 0 og er positiv, noe som tyder på at datasettet vårt for fylke Oslo er spredt.
T-valusen for fylke Oslo er 11.662.
Hvis vi nå bruker 5% signifikansk nivår, altså 2,5%.
Ser vi at vår t-value ligger langt over den, noe som forteller oss at vi testen er ikke statistisk signifikant, siden vår t-value er mye større enn signifikansk nivået på 2,5%.

Rogaland fylke (11) har en std.error verdi på -5.331 noe som forteller oss at verdiene våre for dette fylket ikke er så spredt og at de er negative.
T-value for Rogaland fylket er -1.753.
Hvis vi tar 2,5% signifikansk nivå som i utgangspunkt, ser vi at vår t-value er lavere enn signifikansk verdien.
Vi kan her konkludere med at modellen for selve fylket ikke er statistisk signifikant.

```{r}
#| label: fig-utvikling_residual
#| fig-cap: Plot av utviklingen i residualene for de valgte fylkene
pm2 %>% 
  filter(fylke %in% c("01", "02", "03", "11", "12", "20")) %>%
  ggplot(mapping = aes(x = aar_d, y = res_m3)) +
  geom_point(aes(group = knavn), alpha = 0.4) +
  scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
  geom_hline(yintercept = 0, colour = "black") +
  theme(legend.position = 'bottom') +
  geom_smooth(mapping = aes(x = aar_d, y = res_m3), se = FALSE) +
    facet_wrap(~fylke) 
```

28

i\) Det at linjen ligger over 0 for noen av fylkene, sier oss at linjen treffer de positive verdiene.
Verdiene som ligger under streken er negativ.
For eksempel, hvis vi tar plot 01 som i utgangspunkt, ser vi at linjen er konstant på 0, deretter øker den og går opp til de positive verdiene. 

ii\) Vi kan si at det kan kanskje være grunn for å tro at plot 03 mangler noen viktige verdier.
Det er på grunn av at vi ikke ser noen verdier der i det hele tatt som er spredt som i de andre plottene. 

iii\)

```{r}
#| label: fig-utvikling_residual_Rogaland
#| fig-cap: Utviklingen i residualene for kommuner i Rogaland fylke
pm2 %>% filter(fylke %in% c("11")) %>%
ggplot(mapping = aes(x = aar_d, y = res_m3)) +
scale_color_viridis(discrete = TRUE, option = "D") +
geom_line(aes(group = knavn, colour = knavn, size = knavn)) +
scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
geom_hline(yintercept = 0) +
theme(legend.position = 'bottom')
```

29

```{r}
pm2 %>% filter(knr %in% c("1119", "1120", "1127", 
                          "1121", "1130", "1135", "1106", "1149")
               ) %>%
ggplot(mapping = aes(x = aar_d, y = res_m3)) +
scale_color_viridis(discrete = TRUE, option = "A") +
geom_line(aes(group = knavn, colour = knavn, size =knavn)) +
scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
geom_hline(yintercept = 0) +
theme(legend.position = 'bottom')
```

i\) Det vi kan se ut i fra fylkene i kommunene i Rogaland er at det er en del spredning.
Vi kan se at Klepp får mye oppmerksomhet i første øyeblikk, siden selve fylket ligger på toppen av modellen og vi kan da si med andre ord at fylket Klepp blir ovevurdert.
Det fylket som blir blir undervurdert er Sauda, som da i motsetning til Klepp ligger helt nederst nærmere bunnlinjen i modellen.

[Tabell Marit!]{.underline}

### Modell for hvert fylke

Fylkene fra 2017 var: 01 Østfold, 02 Akershus, 03 Oslo, 04 Hedmark, 05 Oppland, 06 Buskerud, 07 Vestfold, 08 Telemark, 09 Aust-Agder, 10 Vest-Agder, 11 Rogaland, 12 Hordaland, 14 Sogn og Fjordane, 15 Møre og Romsdal, 16 Sør-Trøndelag, 17 Nord-Trøndelag, 18 Nordland, 19\
Troms, 20 Finnmark.

```{r}
pm2_f <- pm2 %>% 
# velger først variablene. Tar med aar_d
  # next a trick to bring with us continent variable
  # not needed for the grouping (no two countries with same name)
  group_by(fnr) %>% 
  nest()
```

```{r}
dim(pm2_f)
```

```{r}
pm2_f %>%
head(n = 6) %>%
print()
```

31

```{r}
#f_model <- function(mod, a_df) {
  #paste(mod, a_df)
#}
```

```{r}
mod4 <- paste("pm2 ~ aar_f", "knr", sep = " + ")

f_model <- function(a_df, mod) {
   lm(
      formula = mod,
      data = a_df
  )
}
```

```{r}
pm2_f %>%
  filter(fnr == "01") %>%
  .$data %>%
  .[[1]]

pm2_f <- pm2_f %>%
  #fjerner Oslo
  filter(fnr != "03") %>%
  mutate(model = map2(mod4, .x = data, .f = f_model)) 

print(pm2_f, n = 2)
```

```{r}
pm2_f %>% 
  # velg rogaland
  filter(fnr == "11") %>%
  # velg data variabelen for rogaland
  .$model %>% 
  .[[1]] %>%
  summary()
```

34

```{r}
mod5 <- paste("pm2 ~ aar_f", "ya_p", "inc_h", "uni_p", "andel_ss", sep = " + ")
```

```{r}
lm5 <- lm(mod5, data = pm2)

pm2_f %>% 
  # velg rogaland
  filter(fnr == "11") %>%
  # velg data variabelen for rogaland
  .$model %>% 
  .[[1]] %>%
  summary()
```

\^34: Kommenter resultatene (feil tall no)

35

```{r}
pm2_f <- pm2_f %>% 
  mutate(
    res_m5 = map2(data, model, add_residuals)
  )
```

36-37

```{r}
#| label: fig-1
#| fig-cap: ---
res_m5 <- pm2_f %>% 
  unnest(res_m5)

res_m5 %>% 
  filter(fnr == "11") %>% 
  ggplot(mapping = aes(x = aar_d, y = res_m5)) + 
  geom_point() +
  geom_line(aes(group = knr), alpha = 1/6) +
  geom_hline(yintercept = 0)
```

38

```{r}
broom::glance
```

39

```{r}
#| label: fig-2
#| fig-cap: Utviklingen i gjennomsnittlig residual for fylkene
res %>% 
  ggplot(mapping = aes(x = aar_d, y = res_m5)) + 
  # because of group = country one line for each country
  geom_line(aes(group = knr), alpha = 1/6) +
  # general smooth for all countries
  geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0)
```

40

```{r}
#| label: fig-3
#| fig-cap: Utviklingen i gjennomsnittlig residual for 6 fylker
res %>% 
  filter(fnr %in% c("01", "02", "03", "07", "11", "12")) %>%
  ggplot(mapping = aes(x = aar_d, y = res_m5)) + 
  # because of group = country one line for each country
  geom_line(aes(group = knr), alpha = 1/6) +
  # general smooth for all countries
  geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0)
```

41

```{r}
#| label: fig-utvikling_residual
#| fig-cap: Plot av utviklingen i residualene for de valgte fylkene
pm2 %>% 
  filter(knr %in% c("0301", "1102", "1106", "1201")) %>%
  ggplot(mapping = aes(x = aar_d, y = res_m5)) +
  geom_line(aes(group = knavn), alpha = 0.4) +
  scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
  geom_hline(yintercept = 0, colour = "black") +
  theme(legend.position = 'bottom') +
  geom_smooth(mapping = aes(x = aar_d, y = res_m5), se = FALSE) +
    facet_wrap(~fylke) 
```
