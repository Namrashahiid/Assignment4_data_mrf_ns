---
title: "Assignment4"
format: html
editor: visual
author: Marit Rygg Fredheim & Namra Shahid
---

## Assignment 4

```{r}
library(tidyverse)
library(lubridate)
library(PxWebApiData)
library(magrittr)

library(lubridate)
library(modelr)
library(broom)
library(lmtest)
library(sandwich)
library(viridis)
library(stringr)
```

### Leser inn data

```{r}
load(file = "data/pm2.Rdata")
```

```{r}
pm2 %>%
mutate(
  # aar <- as.factor(2008:2017) ok
  # men neste er bedre
  aar_d = ymd(paste(aar, "-01-01", sep = "")),
  aar = parse_factor(aar),
  .before = pm2
)
```

```{r}
knr <- pm2 %>%
  select(knr) %>%
  distinct(knr) %>%
  pull()
```

```{r}
# dette holder hvis du vil se knr. 
knr |>
  print(width = 78)
pm2 %>% 
  select(knr) %>%
  distinct(knr) %>%
  pull()
```

```{r}
typeof(knr)
```

```{r}
pm2
```

### Sysselsatte

```{r}
metadata_13122 <- ApiData(
  "https://data.ssb.no/api/v0/no/table/13122/",
  returnMetaFrames = TRUE
)
```

```{r}
# Disse må vi angi for å hente data via API
names(metadata_13122)
```

```{r}
tid <- as.character(2008:2017)
```

```{r}
# Bruker ssb sin web-app og sjekker api-kall nederst på siden
# for å finne de argumentene som må settes. Ønsker sysselsatte
# utfra bosted for årene 2008:2017, for kommunene i knr, alle næringer,
# alle sektorer og ikke delt på kjønn
sysselsatte <- ApiData(
  urlToData = "13122",
  Region = knr,
  Alder = "20-66",
  NACE2007 = "00-99",
  Sektor = "ALLE",
  ContentsCode = "SysselEtterBoste",
  Tid = tid
    )

names(sysselsatte)[1] <- "desc"
names(sysselsatte)[2] <- "ss"
```

```{r}
# 
ss <- sysselsatte$ss %>% 
  # ...
  mutate(
    knavn = sysselsatte$desc$region,
  ) %>% 
  # Endrer variabelnavn
  rename(
    aar = Tid,
    knr = Region,
    sysselsatte_20_66 = value 
  )  %>%
  select(aar, knavn, knr, sysselsatte_20_66) %>% 
  as_tibble()
```

```{r}
ss %>%
head(n = 5) %>%
print()
```

```{r}
pm2 %<>%
  left_join(ss, by = c("aar", "knr"))
```

Gjør så tilsvarende for befolkning i alderen 20-66 år (tabell 07459).

```{r}
metadata_07459 <- ApiData(
  "https://data.ssb.no/api/v0/no/table/07459/",
  returnMetaFrames = TRUE
  )
```

```{r}
names(metadata_07459)
```

Sjekker de ulike, Region og Tid vet vi hva skal være.

```{r}
# Kan prøve med Kjonn = FALSE og se om det gir total så
# slipper vi å addere menn og kvinner
metadata_07459$Kjonn
```

```{r}
# Slitsomt å hente alle år fra 20 til 66 og så aggregere selv
metadata_07459$Alder |>
  pull(values) |>
  print(width = 78)
```

```{r}
metadata_07459$ContentsCode
```

Ser fra API-spørring SSBs web-side at vi kan få alderskategorien vi ønsker vha.
"agg:Funksjonell2a,F309" som er gitt som hint i oppgaveteksten.

Hent ned befolkningsdata fra 07459, merge med ss og regn ut (sysselsatte_20_66/befolkning_20_66)\*100

```{r}
#| echo: false
# siste
Alder = "20-66 år"
```

```{r}
tid <- as.character(2008:2017)
```

```{r}
befolkning <- ApiData(
  urlToData = "07459",
  Region = knr,
  Tid = tid,
  Alder = list("agg:Funksjonell2a", c("F309")),
  Kjonn = FALSE
    )

  names(befolkning)[1] <- "pop2066"
```

```{r}
bb <- befolkning$pop2066 %>% 
  # ...
  mutate(
    knavn = befolkning$pop2066$region,
    aar =  befolkning$dataset$Tid,
    knr = befolkning$dataset$Region
  ) %>% 
  # Endrer variabelnavn
  rename(
    befolkning_20_66 = value) %>%
  select(knavn, aar, knr, alder, befolkning_20_66)
```

```{r}
pm2 %<>%
  left_join(bb, by = c("aar", "knr"))
```

```{r}
pm2 %<>%
mutate(andel_ss = (sysselsatte_20_66/befolkning_20_66)*100)
```

```{r}
#pm2 %<>%
  #select(knr, aar, pm2, ya_p, inc_h, uni_p, nytt_bareal_pp, oms, tid, ss, alder, befolkning, knavn)
```

```{r}
#pm2 %>%
#summarise(ss, by = knr)
```

```{r}
pm2 %<>%
mutate(andel_ss = (sysselsatte_20_66/befolkning_20_66)*100)
```

```{r}
pm2 %>%
select(aar, knr, andel_ss) %>%
head(n = 5) %>%
print()
```

#### Modell

```{r}
pm2 <- pm2 %>%
  mutate(
    #fnr = str_sub(knr, 1,2),
    aar_f = str_sub(aar)
  )
```

```{r}
pm2 %>%
  mutate(
    #fnr = parse_factor(fnr, levels = fnr),
    aar_f = parse_factor(aar_f, levels = aar_f)
  )
```

```{r}
mod1 <- paste("pm2 ~ aar_f", "ya_p",
"inc_h", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", sep = " + ")
print(strwrap(mod1), quote = FALSE)
```

```{r}
lm1 <- lm(mod1, data = pm2)
```

14

```{r}
  summary(lm1)
```

15\.

Det vi kan lese ut av verdien på års-koeffisientene er en estimate verdi, noe som forteller/representerer tall som vi bruker for å kalkulere data.
Dataene kan da vi bruke for å estimere en populasjonsparametre. 

Den første Estimate valuen for aar_f2009 er -585.169105, noe som forteller oss at den er negativ og tyder på at det er en nedgang i antall sysselsatte året 2009. 

Samme kan vi også si om aa_f2010.
Der er Estimate -695.231013.
Her blir konklusjonen det samme for aar_f2009. 

Neste the std.error verdien forteller oss hvor spredt verdiene i vårt datasett er spredt.
Std.error verdien for aar_f2009 er 275.589422, denne verdien er høy, noe som forteller oss i hvilken grad verdiene våre er spredt.
Vi kan konkludere her med å si at ifølge vår Std.error verdi for aar_f2009 er verdiene våre en del spredt. 

T-value, også kalt for the t critical value, forteller oss om resultatene våre er signifikante eller ikke.
Det som er vanlig å gjøre er å sammenligne t-value med et signifikansnivå.
Vi kan ta 5% (0.05) som i utgangspunkt for sammenligning.
Vår t-value for aar_f2009 er -2.123, noe som forteller oss at den er negativ.
Hvis vi bruker nå 0.05 for å sammenligne.
T-test tyder på at det er en to-sidet test.
5%/2= 2,5/100= 0.025.
Hvis nå vår value er mindre enn t-valuen, blir resultatet av testen vår statistisk signifikant.
Dette er tilfelle her, siden vår t-value er mindre enn 2,5% nivå. 

16\.

Fortegnet på estimate value på de forskjellige årene er negativ på de fleste.
Vi kan se at det er en sammenheng her, siden de fleste Estimate verdiene har negative tall.
Videre ser vi at ya_p har en positiv Estimate verdi på 767.961063, noe som tyder på at det er en positiv sammenheng også.
Estimate verdiene begynner med å være negative, deretter blir for eksempel ya_p, inc_h, uni_p positiv, deretter blir nytt_bareal_pp verdien plutselig negativ.

17

```{r}
pm2 <- pm2 %>%
  add_residuals(lm1)
```

\
18

```{r}
pm2 <- pm2 %>%
  mutate(aar_d = make_date(aar))
```

\
19

```{r}
pm2 <- pm2 %<>%
  mutate(
    fylke = substr(knr, start = 1, stop = 2),
    fnr = substr(knr, 1, 2)
    )
```

```{r}
pm2_red <- pm2 %>%
  filter(fylke %in% c("01", "02", "03", "11", "12"))
```

```{r}
#| label: fig-gjennomsnittlig_residual
#| fig-cap: Utviklingen i gjennomsnittlig residual fra modell 1 for utvalgte fylker
pm2_red %>%
  filter(fylke %in% c("01", "02", "03", "11", "12")) %>%
  unnest(c(fylke)) %>%
  group_by (fylke, aar_d) %>%
  summarise(mean_fylke = mean(resid)) %>%
  ggplot(aes(x=aar_d, y=mean_fylke, colour = fylke)) +
  geom_line(lwd=1) +
  theme(legend.position = "bottom")
```

20

Aller først er det slik at denne plotten i Figur 1 viser oss utviklingen i gjennomsnittlig residual fra modell 1 for utvalgte fylker.
På x-aksen ser vi årstallet og på y-aksen tall på residualene. 

Det vi kan si her ut fra modellens treffsikkerhet er at den treffer noe bra.
fnr forteller oss om fylkesnummer.
Fnr: 01, 02, 11, 12 ligger på samme nivå i plottet, noe som tyder på at de har samme verdier.
På andre siden skiller fnr: 03 seg, siden den ligger over alle fnr.
Vi kan her konkludere med å si at fnr: 03 har hatt en positiv residual utvikling. 

\
\
21

#sjekker senere-----

```{r}
mod2 <- paste("pm2 ~ aar_f", "ya_p",
"inc_h", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", sep = " + ")
```

```{r}
lm2 <- lm(mod2, data = pm2)
```

```{r}
summary(lm2)
```

### Dummy fylke og år

22

```{r}
mod3 <- mod2
```

```{r}
mod3 <- paste("pm2 ~ aar_f", "ya_p",
"inc_h", "uni_p",
"nytt_bareal_pp", "oms", "andel_ss", "fylke", sep = " + ")
```

23

```{r}
lm3 <- lm(mod3, data = pm2)
```

24

```{r}
pm2 <- pm2 %>%
  mutate(res_m3 = resid(lm3))
```

```{r}
summary(lm3)
```

[Diskuter!!!!!]{.underline}

25 diskuter!!!

26 samme som 24?

27

```{r}
#| label: fig-utvikling_residual
#| fig-cap: Plot av utviklingen i residualene for de valgte fylkene
pm2 %>% 
  filter(fylke %in% c("01", "02", "03", "11", "12", "20")) %>%
  ggplot(mapping = aes(x = aar_d, y = res_m3)) +
  geom_point(aes(group = knavn), alpha = 0.4) +
  scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
  geom_hline(yintercept = 0, colour = "black") +
  theme(legend.position = 'bottom') +
  geom_smooth(mapping = aes(x = aar_d, y = res_m3), se = FALSE) +
    facet_wrap(~fylke) 
```

28

i\) Det at linjen ligger over 0 for noen av fylkene, sier oss at linjen treffer de positive verdiene.
Verdiene som ligger under streken er negativ.
For eksempel, hvis vi tar plot 01 som i utgangspunkt, ser vi at linjen er konstant på 0, deretter øker den og går opp til de positive verdiene. 

ii\) Vi kan si at det kan kanskje være grunn for å tro at plot 03 mangler noen viktige verdier.
Det er på grunn av at vi ikke ser noen verdier der i det hele tatt som er spredt som i de andre plottene. 

iii\)

```{r}
#| label: fig-utvikling_residual_Rogaland
#| fig-cap: Utviklingen i residualene for kommuner i Rogaland fylke
pm2 %>% filter(fylke %in% c("11")) %>%
ggplot(mapping = aes(x = aar_d, y = res_m3)) +
scale_color_viridis(discrete = TRUE, option = "D") +
geom_line(aes(group = knavn, colour = knavn, size = knavn)) +
scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
geom_hline(yintercept = 0) +
theme(legend.position = 'bottom')
```

29

```{r}
pm2 %>% filter(knr %in% c("1119", "1120", "1127", 
                          "1121", "1130", "1135", "1106", "1149")
               ) %>%
ggplot(mapping = aes(x = aar_d, y = res_m3)) +
scale_color_viridis(discrete = TRUE, option = "A") +
geom_line(aes(group = knavn, colour = knavn, size =knavn)) +
scale_size_manual(values = c(seq(2.0, 0.5, by = -0.1))) +
geom_hline(yintercept = 0) +
theme(legend.position = 'bottom')
```

i\) Det vi kan se ut i fra fylkene i kommunene i Rogaland er at det er en del spredning.
Vi kan se at Klepp får mye oppmerksomhet i første øyeblikk, siden selve fylket ligger på toppen av modellen og vi kan da si med andre ord at fylket Klepp blir ovevurdert.
Det fylket som blir blir undervurdert er Sauda, som da i motsetning til Klepp ligger helt nederst nærmere bunnlinjen i modellen.

### Modell for hvert fylke

```{r}
pm2_f <- pm2 %>% 
# velger først variablene. Tar med aar_d
  # next a trick to bring with us continent variable
  # not needed for the grouping (no two countries with same name)
  group_by(fnr) %>% 
  nest()
```

```{r}
dim(pm2_f)
```

```{r}
pm2_f %>%
head(n = 6) %>%
print()
```

31

```{r}
#f_model <- function(mod, a_df) {
  #paste(mod, a_df)
#}
```

```{r}
f_model <- function(a_df) {
   lm(
      formula = pm2 ~ fylke,
      data = a_df,
  )
}
```

```{r}
<<<<<<< HEAD
#f_model <- function(a_df) {
  # same simple model for each country
  #lm(pm2 ~ fnr, data = a_df)
#}
```

```{r}
pm2_f <- pm2_f %>%
 mutate(mod = map(.x = data, .f = f_model))
=======
f_model <- function(a_df) {
  #same simple model for each country
  lm(mod ~ a_df, data = a_df)
}
```

```{r}
f_model <- pm2_f %>%
  #remeber map(data, function), our data named data
  mutate(model = map(a_df, .f = f_model)) 
>>>>>>> 3b6f7cf157d8628a108239fc6d2e162b09304da4
```
